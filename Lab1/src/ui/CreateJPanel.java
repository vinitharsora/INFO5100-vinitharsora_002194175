/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.io.File;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import model.Product;
//import static ui.CreateJPanel.validateTelephoneNumber;

/**
 *
 * @author vinithiteshharsora
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    
    Product product;
    
    public CreateJPanel(Product product) {
        initComponents();
        this.product = product;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblGeographicdata = new javax.swing.JLabel();
        lblDateofbirth = new javax.swing.JLabel();
        lblTelephonenumbers = new javax.swing.JLabel();
        lblFAXnumber = new javax.swing.JLabel();
        lblEmailaddresses = new javax.swing.JLabel();
        lblSocialSecuritynumber = new javax.swing.JLabel();
        lblMedicalrecordnumber = new javax.swing.JLabel();
        lblHealthplanbeneficiarynumber = new javax.swing.JLabel();
        lblBankaccountnumbers = new javax.swing.JLabel();
        lblCertificatenumber = new javax.swing.JLabel();
        lblVehicleidentifiers = new javax.swing.JLabel();
        lblDeviceidentifiers = new javax.swing.JLabel();
        lblLinkedIn = new javax.swing.JLabel();
        lblInternetprotocoladdresses = new javax.swing.JLabel();
        lblNUID = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        txtGeographicdata = new javax.swing.JTextField();
        txtDateofbirth = new javax.swing.JTextField();
        txtTelephonenumber = new javax.swing.JTextField();
        txtFAXnumber = new javax.swing.JTextField();
        txtEmailaddresses = new javax.swing.JTextField();
        txtSocialSecuritynumber = new javax.swing.JTextField();
        txtMedicalrecordnumber = new javax.swing.JTextField();
        txtHealthplanbeneficiarynumber = new javax.swing.JTextField();
        txtBankaccountnumbers = new javax.swing.JTextField();
        txtCertificatenumber = new javax.swing.JTextField();
        txtVehicleidentifiers = new javax.swing.JTextField();
        txtDeviceidentifiers = new javax.swing.JTextField();
        txtLinkedin = new javax.swing.JTextField();
        txtInternetprotocoladdresses = new javax.swing.JTextField();
        txtnuid = new javax.swing.JTextField();
        btnSaveImage = new javax.swing.JButton();
        jName = new javax.swing.JLabel();
        jGeographicalData = new javax.swing.JLabel();
        jDOB = new javax.swing.JLabel();
        jTelephoneNumber = new javax.swing.JLabel();
        jEmailidAddress = new javax.swing.JLabel();
        jSSN = new javax.swing.JLabel();
        jMedicalRecordNumber = new javax.swing.JLabel();
        jHPBN = new javax.swing.JLabel();
        jBank = new javax.swing.JLabel();
        jLicence = new javax.swing.JLabel();
        jNUID = new javax.swing.JLabel();

        setForeground(new java.awt.Color(0, 102, 102));
        setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 3, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 153, 153));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Create");
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblName.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblName.setForeground(new java.awt.Color(102, 102, 102));
        lblName.setText("Name:");

        lblGeographicdata.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblGeographicdata.setForeground(new java.awt.Color(102, 102, 102));
        lblGeographicdata.setText("Geographic data:");

        lblDateofbirth.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblDateofbirth.setForeground(new java.awt.Color(102, 102, 102));
        lblDateofbirth.setText("Date of Birth:");

        lblTelephonenumbers.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblTelephonenumbers.setForeground(new java.awt.Color(102, 102, 102));
        lblTelephonenumbers.setText("Telephone number:");

        lblFAXnumber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblFAXnumber.setForeground(new java.awt.Color(102, 102, 102));
        lblFAXnumber.setText("FAX number:");

        lblEmailaddresses.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblEmailaddresses.setForeground(new java.awt.Color(102, 102, 102));
        lblEmailaddresses.setText("Email addresses:");

        lblSocialSecuritynumber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblSocialSecuritynumber.setForeground(new java.awt.Color(102, 102, 102));
        lblSocialSecuritynumber.setText("Social Security number:");

        lblMedicalrecordnumber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblMedicalrecordnumber.setForeground(new java.awt.Color(102, 102, 102));
        lblMedicalrecordnumber.setText("Medical record number:");

        lblHealthplanbeneficiarynumber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblHealthplanbeneficiarynumber.setForeground(new java.awt.Color(102, 102, 102));
        lblHealthplanbeneficiarynumber.setText("Health plan beneficiary number:");

        lblBankaccountnumbers.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblBankaccountnumbers.setForeground(new java.awt.Color(102, 102, 102));
        lblBankaccountnumbers.setText("Bank account numbers:");

        lblCertificatenumber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblCertificatenumber.setForeground(new java.awt.Color(102, 102, 102));
        lblCertificatenumber.setText("Certificate/license number:");

        lblVehicleidentifiers.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblVehicleidentifiers.setForeground(new java.awt.Color(102, 102, 102));
        lblVehicleidentifiers.setText("Vehicle identifiers:");

        lblDeviceidentifiers.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblDeviceidentifiers.setForeground(new java.awt.Color(102, 102, 102));
        lblDeviceidentifiers.setText("Device identifiers:");

        lblLinkedIn.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblLinkedIn.setForeground(new java.awt.Color(102, 102, 102));
        lblLinkedIn.setText("LinkedIn:");

        lblInternetprotocoladdresses.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblInternetprotocoladdresses.setForeground(new java.awt.Color(102, 102, 102));
        lblInternetprotocoladdresses.setText("Internet protocol addresses:");

        lblNUID.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblNUID.setForeground(new java.awt.Color(102, 102, 102));
        lblNUID.setText("NUID:");

        lblImage.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        lblImage.setForeground(new java.awt.Color(102, 102, 102));
        lblImage.setText("Image:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
        });

        txtGeographicdata.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGeographicdataKeyReleased(evt);
            }
        });

        txtDateofbirth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDateofbirthKeyReleased(evt);
            }
        });

        txtTelephonenumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelephonenumberKeyReleased(evt);
            }
        });

        txtEmailaddresses.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailaddressesKeyReleased(evt);
            }
        });

        txtSocialSecuritynumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSocialSecuritynumberKeyReleased(evt);
            }
        });

        txtMedicalrecordnumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMedicalrecordnumberKeyReleased(evt);
            }
        });

        txtHealthplanbeneficiarynumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtHealthplanbeneficiarynumberKeyReleased(evt);
            }
        });

        txtBankaccountnumbers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBankaccountnumbersKeyReleased(evt);
            }
        });

        txtCertificatenumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCertificatenumberKeyReleased(evt);
            }
        });

        txtnuid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnuidKeyReleased(evt);
            }
        });

        btnSaveImage.setText("Upload");
        btnSaveImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveImageActionPerformed(evt);
            }
        });

        jName.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        jName.setForeground(new java.awt.Color(0, 102, 102));
        jName.setText("Name Should not Contain any Number");

        jGeographicalData.setFont(new java.awt.Font("Charter", 3, 14)); // NOI18N
        jGeographicalData.setForeground(new java.awt.Color(0, 102, 102));
        jGeographicalData.setText("Geographic Data should not have Special Characters");

        jDOB.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        jDOB.setForeground(new java.awt.Color(0, 102, 102));
        jDOB.setText("Date of Birth Should be in format \"MM-DD-YYYY\"");

        jTelephoneNumber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        jTelephoneNumber.setForeground(new java.awt.Color(0, 102, 102));
        jTelephoneNumber.setText("Telephone Number Should be only 10 digits");

        jEmailidAddress.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        jEmailidAddress.setForeground(new java.awt.Color(0, 102, 102));
        jEmailidAddress.setText("Email ID must have @ symbol");

        jSSN.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        jSSN.setForeground(new java.awt.Color(0, 102, 102));
        jSSN.setText("SSN number should only be 9 digits \"eg. 123-45-6789\" ");

        jMedicalRecordNumber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        jMedicalRecordNumber.setForeground(new java.awt.Color(0, 102, 102));
        jMedicalRecordNumber.setText("Medical Record Number should be first two alphabets and 5/6 digits");

        jHPBN.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        jHPBN.setForeground(new java.awt.Color(0, 102, 102));
        jHPBN.setText("Health plan number should be in format XYZ-any 3 alphabets - 7 digits");

        jBank.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        jBank.setForeground(new java.awt.Color(0, 102, 102));
        jBank.setText("Bank Account number should be only 10 digits");

        jLicence.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        jLicence.setForeground(new java.awt.Color(0, 102, 102));
        jLicence.setText("Licence Number should be Alphabet 'S' followed by 9 digits");

        jNUID.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        jNUID.setForeground(new java.awt.Color(0, 102, 102));
        jNUID.setText("NUID should be only 9 digits");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(btnSave))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMedicalrecordnumber)
                            .addComponent(lblCertificatenumber)
                            .addComponent(lblVehicleidentifiers)
                            .addComponent(lblNUID)
                            .addComponent(lblEmailaddresses)
                            .addComponent(lblTelephonenumbers)
                            .addComponent(lblFAXnumber)
                            .addComponent(lblHealthplanbeneficiarynumber)
                            .addComponent(lblName)
                            .addComponent(lblLinkedIn)
                            .addComponent(lblDeviceidentifiers)
                            .addComponent(lblImage)
                            .addComponent(lblSocialSecuritynumber)
                            .addComponent(lblBankaccountnumbers)
                            .addComponent(lblInternetprotocoladdresses)
                            .addComponent(lblDateofbirth)
                            .addComponent(lblGeographicdata))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGeographicdata, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDateofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelephonenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFAXnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmailaddresses, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSocialSecuritynumber, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMedicalrecordnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHealthplanbeneficiarynumber, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBankaccountnumbers, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCertificatenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVehicleidentifiers, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDeviceidentifiers, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLinkedin, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInternetprotocoladdresses, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtnuid, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSaveImage)
                            .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jName)
                            .addComponent(jGeographicalData)
                            .addComponent(jDOB)
                            .addComponent(jTelephoneNumber)
                            .addComponent(jEmailidAddress)
                            .addComponent(jSSN)
                            .addComponent(jMedicalRecordNumber)
                            .addComponent(jHPBN)
                            .addComponent(jBank)
                            .addComponent(jNUID)
                            .addComponent(jLicence, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblBankaccountnumbers, lblCertificatenumber, lblDateofbirth, lblDeviceidentifiers, lblEmailaddresses, lblFAXnumber, lblGeographicdata, lblHealthplanbeneficiarynumber, lblImage, lblInternetprotocoladdresses, lblLinkedIn, lblMedicalrecordnumber, lblNUID, lblName, lblSocialSecuritynumber, lblTelephonenumbers, lblVehicleidentifiers});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSaveImage, jBank, jDOB, jEmailidAddress, jGeographicalData, jHPBN, jLicence, jMedicalRecordNumber, jNUID, jName, txtBankaccountnumbers, txtCertificatenumber, txtDateofbirth, txtDeviceidentifiers, txtEmailaddresses, txtFAXnumber, txtGeographicdata, txtHealthplanbeneficiarynumber, txtInternetprotocoladdresses, txtLinkedin, txtMedicalrecordnumber, txtName, txtSocialSecuritynumber, txtTelephonenumber, txtVehicleidentifiers, txtnuid});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName)
                    .addComponent(jName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGeographicdata)
                    .addComponent(txtGeographicdata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jGeographicalData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateofbirth)
                    .addComponent(txtDateofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDOB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelephonenumbers)
                    .addComponent(txtTelephonenumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTelephoneNumber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFAXnumber)
                    .addComponent(txtFAXnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailaddresses)
                    .addComponent(txtEmailaddresses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEmailidAddress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSocialSecuritynumber)
                    .addComponent(txtSocialSecuritynumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSSN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMedicalrecordnumber)
                    .addComponent(txtMedicalrecordnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jMedicalRecordNumber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHealthplanbeneficiarynumber)
                    .addComponent(txtHealthplanbeneficiarynumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHPBN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBankaccountnumbers)
                    .addComponent(txtBankaccountnumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBank))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCertificatenumber)
                    .addComponent(txtCertificatenumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLicence))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVehicleidentifiers)
                    .addComponent(txtVehicleidentifiers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeviceidentifiers)
                    .addComponent(txtDeviceidentifiers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLinkedIn)
                    .addComponent(txtLinkedin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInternetprotocoladdresses)
                    .addComponent(txtInternetprotocoladdresses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNUID)
                    .addComponent(txtnuid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNUID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblImage)
                    .addComponent(btnSaveImage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        if (
            txtName.getText().isEmpty() &&
            txtEmailaddresses.getText().isEmpty() &&
            txtGeographicdata.getText().isEmpty() &&
            txtDateofbirth.getText().isEmpty() &&
            txtTelephonenumber.getText().isEmpty() &&
            txtFAXnumber.getText().isEmpty() &&
            txtSocialSecuritynumber.getText().isEmpty() &&
            txtMedicalrecordnumber.getText().isEmpty() &&
            txtHealthplanbeneficiarynumber.getText().isEmpty() &&
            txtBankaccountnumbers.getText().isEmpty() &&
            txtCertificatenumber.getText().isEmpty() &&
            txtVehicleidentifiers.getText().isEmpty()  &&
            txtDeviceidentifiers.getText().isEmpty()  &&
            txtLinkedin.getText().isEmpty()  &&
            txtInternetprotocoladdresses.getText().isEmpty()  &&
            txtnuid.getText().isEmpty()  
           ) 
        {
            JOptionPane.showMessageDialog(null, "Please enter all fields");
        }
        else 
        {             
            if (isValidUsername(txtName.getText())){
                product.setName(txtName.getText());
            }
            else {
                System.out.println("Name is Incorrect !");
            }
            
            if (validateMedicalRecordNumber(txtMedicalrecordnumber.getText())){
                product.setName(txtMedicalrecordnumber.getText());
            }
            else {
                System.out.println("Medical record number is Incorrect !");
            }
            
            if (validateHealthRecordNumber(txtHealthplanbeneficiarynumber.getText())){
                product.setHealthplanbeneficiaryNumber(txtHealthplanbeneficiarynumber.getText());
            }
            else {
                System.out.println("Health plan number is wrong !");
            }
            
            if (isValidDate(txtDateofbirth.getText())) {
                product.setDOB((txtDateofbirth.getText()));  
            }
            else {
                System.out.println("Date of Birth is wrong");
            }
            
            if (isValidAddress(txtGeographicdata.getText())) {
            product.setGeographicData(txtGeographicdata.getText()); 
            }
            else {
                System.out.println("Address is incorrect");
            }


            if (validateTelephoneNumber(txtTelephonenumber.getText())){
            product.setTelephoneNumber((txtTelephonenumber.getText()));
            }
             
            else{
                System.out.println("Telephone number is incorrect !");
            }

            
            if (validateEmailAddress(txtEmailaddresses.getText())) {
                product.setEmailAddress(txtEmailaddresses.getText());
            }     
            else {
                System.out.println("Email is not valid!");
            }                               
            
            
            if(isValidSSN(txtSocialSecuritynumber.getText())){                
                product.setSSN((txtSocialSecuritynumber.getText()));
            
            }
            else {
                System.out.println("SSN number is invalid");
            }
           
            if(validateNUID(txtnuid.getText())){
                product.setNUID((txtnuid.getText()));
            }
            else {
                System.out.println("NUID is incorrect");
            }
            if(validateBankAccountNumber(txtBankaccountnumbers.getText())){
                product.setBankaccountNumber((txtBankaccountnumbers.getText()));
            }
            else {
                System.out.println("Bank Account Number does not match !");
            }
            if(validateLicenceNumber(txtCertificatenumber.getText())){
                product.setCertificateNumber(txtCertificatenumber.getText());
            }
            else {
                System.out.println("Licence Number does not match !");
            }
            if(isValidIPAddress(txtInternetprotocoladdresses.getText())){
                product.setIpAddress((txtInternetprotocoladdresses.getText()));
            }
            else {
                System.out.println("I am not an IP Address !");
            }
            

      
            JOptionPane.showMessageDialog(this, "Product Information Saved.");
        }
                
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSaveImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveImageActionPerformed
//        // TODO add your handling code here:

        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
//        lblImage.setText(filename);
        ImageIcon image = new ImageIcon(filename);
        product.setImage(image);
      
//        
//        int image;
//        JFileChooser uploadImage = new JFileChooser();
//        image = uploadImage.showSaveDialog(null);
//        if(image == JFileChooser.APPROVE_OPTION) {
//            File currentImage = uploadImage.getSelectedFile();
//            product.setImage(currentImage);
////             Get image name;
//            String[] validatedImageName = currentImage.toString().split("/");
//            product.setImage((uploadImage.getSelectedFile()));
//        }  
    }//GEN-LAST:event_btnSaveImageActionPerformed

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        // TODO add your handling code here:
        jName.setText(null);
        String s = "^[a-zA-Z\\\\\\\\s]+";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtName.getText());
        if(!match.matches()){
            jName.setText("Name is incorrect, Please enter a Valid Name !");
        }else{
            jName.setText("");
        } 
        
        
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtGeographicdataKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGeographicdataKeyReleased
        // TODO add your handling code here:
        
        jGeographicalData.setText(null);
        String s = "^\\d+\\s[A-z]+\\s[A-z]+(,)\\s[A-z0-9]+(,)\\s[A-z]+(,)\\s[0-9]+";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtGeographicdata.getText());
        if(!match.matches()){
            jGeographicalData.setText("Geographic data is incorrect, Please enter a Valid Geographic data !");
        }else{
            jGeographicalData.setText("");
        }
    }//GEN-LAST:event_txtGeographicdataKeyReleased

    private void txtDateofbirthKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateofbirthKeyReleased
        // TODO add your handling code here:
        jDOB.setText(null);
        String s = "^(1[0-2]|0[1-9])/(3[01]"
                       + "|[12][0-9]|0[1-9])/[0-9]{4}$";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtDateofbirth.getText());
        if(!match.matches()){
            jDOB.setText("Date of Birth date is incorrect, Please enter a Valid Birth date !");
        }else{
            jDOB.setText("");
        }
    }//GEN-LAST:event_txtDateofbirthKeyReleased

    private void txtTelephonenumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelephonenumberKeyReleased
        // TODO add your handling code here:
            jTelephoneNumber.setText(null);
        String s = "\\d{10}|(?:\\d{3}-){2}\\d{4}|\\(\\d{3}\\)\\d{3}-?\\d{4}";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtTelephonenumber.getText());
        if(!match.matches()){
            jTelephoneNumber.setText("Telephone Number is incorrect, Please enter a Valid Telephone Number !");
        }else{
            jTelephoneNumber.setText("");
        }
    }//GEN-LAST:event_txtTelephonenumberKeyReleased

    private void txtEmailaddressesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailaddressesKeyReleased
        // TODO add your handling code here:
        jEmailidAddress.setText(null);
        String s = "^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtEmailaddresses.getText());
        if(!match.matches()){
            jEmailidAddress.setText("Email ID is incorrect, Please enter a Valid Email ID !");
        }else{
            jEmailidAddress.setText("");
        }
        
    }//GEN-LAST:event_txtEmailaddressesKeyReleased

    private void txtMedicalrecordnumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedicalrecordnumberKeyReleased
        // TODO add your handling code here:
        jMedicalRecordNumber.setText(null);
        String s = "^[A-Z][A-Z]\\d{5,6}$";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtMedicalrecordnumber.getText());
        if(!match.matches()){
            jMedicalRecordNumber.setText("MRN is incorrect, Please enter a Valid MRN !");
        }else
        {
            jMedicalRecordNumber.setText("");
        }
    }//GEN-LAST:event_txtMedicalrecordnumberKeyReleased

    private void txtHealthplanbeneficiarynumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHealthplanbeneficiarynumberKeyReleased
        // TODO add your handling code here:
     
        jHPBN.setText(null);
        String s = "^\\b(XYZ)-?[a-zA-Z]{3}-?\\d{7}\\b$";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtHealthplanbeneficiarynumber.getText());
        if(!match.matches()){
            jHPBN.setText("Health Plan Number is incorrect, Please enter a Valid Health Plan Number !");
        }else
        {
            jHPBN.setText("");
        }
     
    }//GEN-LAST:event_txtHealthplanbeneficiarynumberKeyReleased

    private void txtBankaccountnumbersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBankaccountnumbersKeyReleased
        // TODO add your handling code here:
        jBank.setText(null);
        String s = "^[0-9]{10}$";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtBankaccountnumbers.getText());
        if(!match.matches()){
            jBank.setText("Bank Account Number is incorrect, Please enter a Valid Bank Account Number !");
        }else
        {
            jBank.setText("");
        }
        
    }//GEN-LAST:event_txtBankaccountnumbersKeyReleased

    private void txtCertificatenumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCertificatenumberKeyReleased
        // TODO add your handling code here:
        jLicence.setText(null);
        String s = "^[S]\\d{9}$";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtCertificatenumber.getText());
        if(!match.matches()){
            jLicence.setText("Licence Number is incorrect, Please enter a Valid Licence Number !");
        }else
        {
            jLicence.setText("");
        }
        
    }//GEN-LAST:event_txtCertificatenumberKeyReleased

    private void txtnuidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnuidKeyReleased
        // TODO add your handling code here:
        jNUID.setText(null);
        String s = "^[0-9]{9}$";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtnuid.getText());
        if(!match.matches()){
            jNUID.setText("IP Address is incorrect, Please enter a Valid IP address !");
        }else
        {
            jNUID.setText("");
        }
    }//GEN-LAST:event_txtnuidKeyReleased

    private void txtSocialSecuritynumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSocialSecuritynumberKeyReleased
        // TODO add your handling code here:
        
        jSSN.setText(null);
        String s = "^(?!666|000|9\\d{2})\\d{3}"
                       + "-(?!00)\\d{2}-"
                       +"(?!0{4})\\d{4}$";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtSocialSecuritynumber.getText());
        if(!match.matches()){
            jSSN.setText("SSN is incorrect, Please enter a Valid SSN !");
        }else
        {
            jSSN.setText("");
        }
    }//GEN-LAST:event_txtSocialSecuritynumberKeyReleased

    
    //Health plan number
    
    public static boolean validateHealthRecordNumber(String str)
    {
     
        String regex = "^\\b(XYZ)-?[a-zA-Z]{3}-?\\d{7}\\b$";
      
        Pattern p = Pattern.compile(regex);
 
        if (str == null)
        {
            return false;
        }
 
        Matcher m = p.matcher(str);
 
        return m.matches();
    }
    
    // Medical record number
    
    public static boolean validateMedicalRecordNumber(String str)
    {
     
        String regex = "^[A-Z][A-Z]\\d{5,6}$";
      
        Pattern p = Pattern.compile(regex);
 
        if (str == null)
        {
            return false;
        }
 
        Matcher m = p.matcher(str);
 
        return m.matches();
    }
        
    //Name Validation
    
    public static boolean isValidUsername(String name)
    {
  
        // Regex to check valid username.
        String regex = "^[a-zA-Z\\\\\\\\s]+";
  
        // Compile the ReGex
        Pattern p = Pattern.compile(regex);
  
        // If the username is empty
        // return false
        if (name == null) {
            return false;
        }
  
        // Pattern class contains matcher() method
        // to find matching between given username
        // and regular expression.
        Matcher m = p.matcher(name);
  
        // Return if the username
        // matched the ReGex
        return m.matches();
    }
    
    //Telephone number validation
    
    public static boolean validateTelephoneNumber(String str)
    {
     
        String regex = "\\d{10}|(?:\\d{3}-){2}\\d{4}|\\(\\d{3}\\)\\d{3}-?\\d{4}";
 
//        String regex = "^[1-9][0-9]{9}$";
        Pattern p = Pattern.compile(regex);
 
       
        if (str == null)
        {
            return false;
        }
 
       
        Matcher m = p.matcher(str);
 
     
        return m.matches();
    }
  
    // Date of Birth Validation
    
    public static boolean isValidDate(String d)
    {
        String regex = "^(1[0-2]|0[1-9])/(3[01]"
                       + "|[12][0-9]|0[1-9])/[0-9]{4}$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher((CharSequence)d);
        return matcher.matches();
    }
     
    // Email Validation

    private Boolean validateEmailAddress(String email) {
        String regex = "^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$";
 
        Pattern p = Pattern.compile(regex);
 
       
        if (email == null)
        {
            return false;
        }
 
       
        Matcher m = p.matcher(email);
 
     
        return m.matches();
    }

    // SSN number
    
    public static boolean isValidSSN(String str)
    {
        // Regex to check SSN
        // (Social Security Number).
        String regex = "^(?!666|000|9\\d{2})\\d{3}"
                       + "-(?!00)\\d{2}-"
                       +"(?!0{4})\\d{4}$";
        
//        String regex = "^(\\d{3}-\\d{2}-\\d{4})";
 
        // Compile the ReGex
        Pattern p = Pattern.compile(regex);
 
        // If the string is empty
        // return false
        if (str == null)
        {
            return false;
        }
 
        // Pattern class contains matcher()
        //  method to find matching between
        //  given string and regular expression.
        Matcher m = p.matcher(str);
 
        // Return if the string
        // matched the ReGex
        return m.matches();
    }

    // NUID validation 
    
     public static boolean validateNUID(String str)
    {
     
        String regex = "^[0-9]{9}$";
      
        Pattern p = Pattern.compile(regex);
 
        if (str == null)
        {
            return false;
        }
 
        Matcher m = p.matcher(str);
 
        return m.matches();
    }
     
     
    //Home Address Validation
     
    public static boolean isValidAddress(String d)
    {
      String regex = "^\\d+\\s[A-z]+\\s[A-z]+(,)\\s[A-z0-9]+(,)\\s[A-z]+(,)\\s[0-9]+";
//        String regex = "^\\d+\\s[A-z]+\\s[A-z]+";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher((CharSequence)d);
        return matcher.matches();
    }
    
    
    //Bank Account Number validation
    
    public static boolean validateBankAccountNumber(String str)
    {
     
        String regex = "^[0-9]{10}$";
      
        Pattern p = Pattern.compile(regex);
 
        if (str == null)
        {
            return false;
        }
 
        Matcher m = p.matcher(str);
 
        return m.matches();
    }
     
     
    //Certificate or Licence Number
         
     public static boolean validateLicenceNumber(String str)
    {
     
        String regex = "^[S]\\d{9}$";
      
        Pattern p = Pattern.compile(regex);
 
        if (str == null)
        {
            return false;
        }
 
        Matcher m = p.matcher(str);
 
        return m.matches();
    }
     
     
     //ip address validation
     
     public static boolean isValidIPAddress(String ip)
    {
 
        // Regex for digit from 0 to 255.
        String zeroTo255
            = "(\\d{1,2}|(0|1)\\"
              + "d{2}|2[0-4]\\d|25[0-5])";
 
        // Regex for a digit from 0 to 255 and
        // followed by a dot, repeat 4 times.
        // this is the regex to validate an IP address.
        String regex
            = zeroTo255 + "\\."
              + zeroTo255 + "\\."
              + zeroTo255 + "\\."
              + zeroTo255;
 
        // Compile the ReGex
        Pattern p = Pattern.compile(regex);
 
        // If the IP address is empty
        // return false
        if (ip == null) {
            return false;
        }
 
        // Pattern class contains matcher() method
        // to find matching between given IP address
        // and regular expression.
        Matcher m = p.matcher(ip);
 
        // Return if the IP address
        // matched the ReGex
        return m.matches();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveImage;
    private javax.swing.JLabel jBank;
    private javax.swing.JLabel jDOB;
    private javax.swing.JLabel jEmailidAddress;
    private javax.swing.JLabel jGeographicalData;
    private javax.swing.JLabel jHPBN;
    private javax.swing.JLabel jLicence;
    private javax.swing.JLabel jMedicalRecordNumber;
    private javax.swing.JLabel jNUID;
    private javax.swing.JLabel jName;
    private javax.swing.JLabel jSSN;
    private javax.swing.JLabel jTelephoneNumber;
    private javax.swing.JLabel lblBankaccountnumbers;
    private javax.swing.JLabel lblCertificatenumber;
    private javax.swing.JLabel lblDateofbirth;
    private javax.swing.JLabel lblDeviceidentifiers;
    private javax.swing.JLabel lblEmailaddresses;
    private javax.swing.JLabel lblFAXnumber;
    private javax.swing.JLabel lblGeographicdata;
    private javax.swing.JLabel lblHealthplanbeneficiarynumber;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblInternetprotocoladdresses;
    private javax.swing.JLabel lblLinkedIn;
    private javax.swing.JLabel lblMedicalrecordnumber;
    private javax.swing.JLabel lblNUID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSocialSecuritynumber;
    private javax.swing.JLabel lblTelephonenumbers;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblVehicleidentifiers;
    private javax.swing.JTextField txtBankaccountnumbers;
    private javax.swing.JTextField txtCertificatenumber;
    private javax.swing.JTextField txtDateofbirth;
    private javax.swing.JTextField txtDeviceidentifiers;
    private javax.swing.JTextField txtEmailaddresses;
    private javax.swing.JTextField txtFAXnumber;
    private javax.swing.JTextField txtGeographicdata;
    private javax.swing.JTextField txtHealthplanbeneficiarynumber;
    private javax.swing.JTextField txtInternetprotocoladdresses;
    private javax.swing.JTextField txtLinkedin;
    private javax.swing.JTextField txtMedicalrecordnumber;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSocialSecuritynumber;
    private javax.swing.JTextField txtTelephonenumber;
    private javax.swing.JTextField txtVehicleidentifiers;
    private javax.swing.JTextField txtnuid;
    // End of variables declaration//GEN-END:variables
}
