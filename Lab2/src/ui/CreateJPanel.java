/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Car;
import model.CarHistory;

/**
 *
 * @author vinithiteshharsora
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    
    CarHistory history;
    CarHistory carHistory;
    boolean avail;
    boolean emc;
    public CreateJPanel(CarHistory history) {
        
        initComponents();
        this.history = history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        AvailableCar = new javax.swing.JLabel();
        CurrentlyAvailableCars = new javax.swing.JLabel();
        Manufacturer = new javax.swing.JLabel();
        YearOfManufacturing = new javax.swing.JLabel();
        MinimumSeats = new javax.swing.JLabel();
        SerialNumber = new javax.swing.JLabel();
        ModelNumber = new javax.swing.JLabel();
        CarManufacturersUsedUber = new javax.swing.JLabel();
        ListOfCarsAvailableinaGivenCity = new javax.swing.JLabel();
        ListOfCarsthathaveExpiredMaintenanceCertificate = new javax.swing.JLabel();
        txtCurrentlyAvailableCars = new javax.swing.JTextField();
        txtYearOfManufacturing = new javax.swing.JTextField();
        txtManufacturer = new javax.swing.JTextField();
        txtMinimumSeats = new javax.swing.JTextField();
        txtSerialNumber = new javax.swing.JTextField();
        txtModelNumber = new javax.swing.JTextField();
        txtCarManufacturersUsedUber = new javax.swing.JTextField();
        txtListOfCarsAvailableinaGivenCity = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        Yes = new javax.swing.JRadioButton();
        No = new javax.swing.JRadioButton();
        Expired = new javax.swing.JRadioButton();
        NotExpired = new javax.swing.JRadioButton();
        jSerialNumber = new javax.swing.JLabel();
        jCityName = new javax.swing.JLabel();
        jYearofManufacturing = new javax.swing.JLabel();

        lblTitle.setBackground(new java.awt.Color(153, 153, 153));
        lblTitle.setFont(new java.awt.Font("Didot", 3, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(102, 102, 0));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Car Details");

        AvailableCar.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        AvailableCar.setForeground(new java.awt.Color(102, 102, 0));
        AvailableCar.setText("Available Car");

        CurrentlyAvailableCars.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        CurrentlyAvailableCars.setForeground(new java.awt.Color(102, 102, 0));
        CurrentlyAvailableCars.setText("Currently Available Cars:");

        Manufacturer.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        Manufacturer.setForeground(new java.awt.Color(102, 102, 0));
        Manufacturer.setText("Manufacturer:");

        YearOfManufacturing.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        YearOfManufacturing.setForeground(new java.awt.Color(102, 102, 0));
        YearOfManufacturing.setText("Year Of Manufacturing:");

        MinimumSeats.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        MinimumSeats.setForeground(new java.awt.Color(102, 102, 0));
        MinimumSeats.setText("Minimum Seats:");

        SerialNumber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        SerialNumber.setForeground(new java.awt.Color(102, 102, 0));
        SerialNumber.setText("Serial Number:");

        ModelNumber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        ModelNumber.setForeground(new java.awt.Color(102, 102, 0));
        ModelNumber.setText("Model Number:");

        CarManufacturersUsedUber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        CarManufacturersUsedUber.setForeground(new java.awt.Color(102, 102, 0));
        CarManufacturersUsedUber.setText("Car Manufacturers Used Uber:");

        ListOfCarsAvailableinaGivenCity.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        ListOfCarsAvailableinaGivenCity.setForeground(new java.awt.Color(102, 102, 0));
        ListOfCarsAvailableinaGivenCity.setText("List Of Cars Available in a Given City:");

        ListOfCarsthathaveExpiredMaintenanceCertificate.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        ListOfCarsthathaveExpiredMaintenanceCertificate.setForeground(new java.awt.Color(102, 102, 0));
        ListOfCarsthathaveExpiredMaintenanceCertificate.setText("List Of Cars with Expired Maintenance Certificate:");

        txtCurrentlyAvailableCars.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N

        txtYearOfManufacturing.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        txtYearOfManufacturing.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtYearOfManufacturingKeyReleased(evt);
            }
        });

        txtManufacturer.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N

        txtMinimumSeats.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N

        txtSerialNumber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        txtSerialNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSerialNumberKeyReleased(evt);
            }
        });

        txtModelNumber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N

        txtCarManufacturersUsedUber.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N

        txtListOfCarsAvailableinaGivenCity.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        txtListOfCarsAvailableinaGivenCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtListOfCarsAvailableinaGivenCityKeyReleased(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        Yes.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        Yes.setForeground(new java.awt.Color(102, 102, 0));
        Yes.setText("Yes");
        Yes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YesActionPerformed(evt);
            }
        });

        No.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        No.setForeground(new java.awt.Color(102, 102, 0));
        No.setText("No");
        No.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        No.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoActionPerformed(evt);
            }
        });

        Expired.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        Expired.setForeground(new java.awt.Color(102, 102, 0));
        Expired.setText("Expired");
        Expired.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Expired.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExpiredActionPerformed(evt);
            }
        });

        NotExpired.setFont(new java.awt.Font("Didot", 3, 14)); // NOI18N
        NotExpired.setForeground(new java.awt.Color(102, 102, 0));
        NotExpired.setText("Not Expired");
        NotExpired.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NotExpired.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotExpiredActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(AvailableCar, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                        .addComponent(YearOfManufacturing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CurrentlyAvailableCars, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ListOfCarsthathaveExpiredMaintenanceCertificate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ListOfCarsAvailableinaGivenCity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CarManufacturersUsedUber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ModelNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SerialNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MinimumSeats, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Manufacturer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Yes, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(No, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Expired)
                        .addGap(10, 10, 10)
                        .addComponent(NotExpired))
                    .addComponent(txtListOfCarsAvailableinaGivenCity)
                    .addComponent(txtCarManufacturersUsedUber)
                    .addComponent(txtModelNumber)
                    .addComponent(txtSerialNumber)
                    .addComponent(txtMinimumSeats)
                    .addComponent(txtManufacturer)
                    .addComponent(txtYearOfManufacturing)
                    .addComponent(txtCurrentlyAvailableCars)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jYearofManufacturing, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Expired, NotExpired});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AvailableCar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Yes)
                        .addComponent(No)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CurrentlyAvailableCars, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCurrentlyAvailableCars, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YearOfManufacturing, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYearOfManufacturing, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jYearofManufacturing, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Manufacturer)
                    .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MinimumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMinimumSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CarManufacturersUsedUber, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCarManufacturersUsedUber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ListOfCarsAvailableinaGivenCity, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtListOfCarsAvailableinaGivenCity, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCityName))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(ListOfCarsthathaveExpiredMaintenanceCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Expired)
                            .addComponent(NotExpired))))
                .addGap(25, 25, 25)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(303, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jCityName, txtListOfCarsAvailableinaGivenCity});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jYearofManufacturing, txtYearOfManufacturing});

    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String CurrentlyAvailableCars = txtCurrentlyAvailableCars.getText();
        System.out.println(CurrentlyAvailableCars);
        
        String YearOfManufacturing = txtYearOfManufacturing.getText();
        System.out.println(YearOfManufacturing);
        
        String MinimumSeats = txtMinimumSeats.getText();
        System.out.println(MinimumSeats);
        
        String SerialNumber = txtSerialNumber.getText();
        System.out.println(SerialNumber);
        
        String ModelNumber = txtModelNumber.getText();
        System.out.println(ModelNumber);
        
//        int LastTimeFleetlogUpdated = Integer.parseInt(txtLastTimeFleetlogUpdated.getText());
//        System.out.println(LastTimeFleetlogUpdated);
        
        String Manufacturer = txtManufacturer.getText();
        System.out.println(Manufacturer);
        
        String CarManufacturersUsedUber = txtCarManufacturersUsedUber.getText();
        System.out.println(CarManufacturersUsedUber);
        
        String ListOfCarsAvailableinaGivenCity = txtListOfCarsAvailableinaGivenCity.getText();
        System.out.println(ListOfCarsAvailableinaGivenCity);
        
        boolean avail = this.avail;
        //System.out.println(avail);
        
        
        boolean emc = this.emc;
        //System.out.println(emc);
        
        Car car = history.addNewCar();
        
        car.setCurrentlyAvailableCars(Integer.parseInt(txtCurrentlyAvailableCars.getText()));
        car.setYearOfManufacturing(Integer.parseInt(txtYearOfManufacturing.getText()));
        car.setMinimumSeats(Integer.parseInt(txtMinimumSeats.getText()));
        car.setSerialNumber(txtSerialNumber.getText());
        car.setModelNumber(txtModelNumber.getText());
        car.setManufacturer(txtManufacturer.getText());
        car.setCarManufacturersUsedUber(txtCarManufacturersUsedUber.getText());
        car.setListOfCarsAvailableinaGivenCity(txtListOfCarsAvailableinaGivenCity.getText());
        
        
        if( 
            txtCurrentlyAvailableCars.getText().isEmpty() ||
            txtYearOfManufacturing.getText().isEmpty() ||               
            txtMinimumSeats.getText().isEmpty() || 
            txtSerialNumber.getText().isEmpty() ||
            txtModelNumber.getText().isEmpty() ||
            txtManufacturer.getText().isEmpty() ||
            txtCarManufacturersUsedUber.getText().isEmpty() ||
            txtListOfCarsAvailableinaGivenCity.getText().isEmpty() 
           )
        {
            JOptionPane.showMessageDialog(null, "Please enter all fields !");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "New Car Details Added.");
        }
          
        
        
//        else
//          
//              if (isValidUsername(txtName.getText())){
//                product.setName(txtName.getText());
//            }     
      

   
        
    }//GEN-LAST:event_btnSaveActionPerformed
  
//        public boolean validateData(){
//        boolean b = false;
//        if(txtListOfCarsAvailableinaGivenCity.getText().equals(null)){
//        b = false;
//        JOptionPane.showMessageDialog(null, "Enter Valid Name");
//        txtListOfCarsAvailableinaGivenCity.requestFocus();
//         }
//        else
//        b= true;
//        return b;
//         }
//    
    private void YesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YesActionPerformed
        // TODO add your handling code here:
        if(Yes.isSelected())
        {
        No.setSelected(false);
        avail = true;
        
//        System.out.println(Yes.isSelected());
        
        }
        
    }//GEN-LAST:event_YesActionPerformed

    private void NoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoActionPerformed
        // TODO add your handling code here:
        if(No.isSelected())
        {
        Yes.setSelected(false);
        avail = false;
//        System.out.println(No.isSelected());
        }
        
    }//GEN-LAST:event_NoActionPerformed

    private void ExpiredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpiredActionPerformed
        // TODO add your handling code here:
        if(Expired.isSelected())
        {
        NotExpired.setSelected(false);
        emc = true;
//        System.out.println(Expired.isSelected());
        }
        
    }//GEN-LAST:event_ExpiredActionPerformed

    private void NotExpiredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotExpiredActionPerformed
        // TODO add your handling code here:
        if(NotExpired.isSelected())
        {
        Expired.setSelected(false);
        emc = false;
//        System.out.println(NotExpired.isSelected());
        }
        
    }//GEN-LAST:event_NotExpiredActionPerformed

    private void txtSerialNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerialNumberKeyReleased
        // TODO add your handling code here:
        jSerialNumber.setText(null);
        String s = "^[A-Z][A-Z][A-Z]\\d{5,6}$";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtSerialNumber.getText());
        if(!match.matches()){
            jSerialNumber.setText("SN is incorrect, Please enter a Valid SN !");
        }else
        {
            jSerialNumber.setText("");
        }
        
        
    }//GEN-LAST:event_txtSerialNumberKeyReleased

    private void txtListOfCarsAvailableinaGivenCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtListOfCarsAvailableinaGivenCityKeyReleased
        // TODO add your handling code here:
        
        jCityName.setText(null);
        String s = "^[a-zA-Z\\\\\\\\s]+";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtListOfCarsAvailableinaGivenCity.getText());
        if(!match.matches()){
            jCityName.setText("City Name is incorrect, Please enter a Valid City Name !");
        }else{
            jCityName.setText("");
        } 
        
    }//GEN-LAST:event_txtListOfCarsAvailableinaGivenCityKeyReleased

    private void txtYearOfManufacturingKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYearOfManufacturingKeyReleased
        // TODO add your handling code here:
        
        jYearofManufacturing.setText(null);
        String s = "^[0-4]{4}$";
        Pattern pat = Pattern.compile(s);
        Matcher match = pat.matcher(txtYearOfManufacturing.getText());
        if(!match.matches()){
            jYearofManufacturing.setText("Only 4 numbers are allowed !");
        }else{
            jYearofManufacturing.setText("");
        } 
        
    }//GEN-LAST:event_txtYearOfManufacturingKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AvailableCar;
    private javax.swing.JLabel CarManufacturersUsedUber;
    private javax.swing.JLabel CurrentlyAvailableCars;
    private javax.swing.JRadioButton Expired;
    private javax.swing.JLabel ListOfCarsAvailableinaGivenCity;
    private javax.swing.JLabel ListOfCarsthathaveExpiredMaintenanceCertificate;
    private javax.swing.JLabel Manufacturer;
    private javax.swing.JLabel MinimumSeats;
    private javax.swing.JLabel ModelNumber;
    private javax.swing.JRadioButton No;
    private javax.swing.JRadioButton NotExpired;
    private javax.swing.JLabel SerialNumber;
    private javax.swing.JLabel YearOfManufacturing;
    private javax.swing.JRadioButton Yes;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jCityName;
    private javax.swing.JLabel jSerialNumber;
    private javax.swing.JLabel jYearofManufacturing;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtCarManufacturersUsedUber;
    private javax.swing.JTextField txtCurrentlyAvailableCars;
    private javax.swing.JTextField txtListOfCarsAvailableinaGivenCity;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtMinimumSeats;
    private javax.swing.JTextField txtModelNumber;
    private javax.swing.JTextField txtSerialNumber;
    private javax.swing.JTextField txtYearOfManufacturing;
    // End of variables declaration//GEN-END:variables

//    private void populateTableCar() {
//        DefaultTableModel model = (DefaultTableModel) TableCar.getModel();
//        model.setRowCount(0);
//        
//        for (Car car : history.getHistory())
//        {
//            Object [] row = new Object [10];
//            row[0] = car;
//            row[1] = car.getYearOfManufacturing();
//            row[2] = car.getModelNumber();
//            row[3] = car.getMinimumSeats();
//            row[4] = car.getSerialNumber();
//            row[5] = car.getListOfCarsAvailableinaGivenCity();
//            row[6] = car.getCurrentlyAvailableCars();
//            row[7] = car.isListOfCarsthathaveExpiredMaintenanceCertificate();
//            row[8] = car.getCarManufacturersUsedUber();         
//            row[9] = car.isAvailableCar();
////            row[10] = car.getLastTimeFleetlogUpdated();
//            
//            model.addRow(row);
//            
//        }
//    }
//
}
